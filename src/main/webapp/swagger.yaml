---
swagger: "2.0"
info:
  description: "JMS Rest API exposes the Java EE back-end to the front-end"
  version: "1.0.0"
  title: "JMS Client APIs"
  contact:
    name: "Rinus Hofman"
    url: "http://localhost:8080"
  license:
    name: "License name"
    url: "http://www.license.com"
host: "localhost:8080"
basePath: "/jmsRestClient/api"
tags:
- name: "Queue"
schemes:
- "http"
- "https"
paths:
  /queues:
    get:
      tags:
      - "Queue"
      summary: "Returns all available queues"
      description: ""
      operationId: "getQueues"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Queues found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Queue"
        204:
          description: "No queues available on server"
        500:
          description: "Server error"
  /queues/{queue}/clear:
    delete:
      tags:
      - "Queue"
      summary: "Delete al messages from a given queue"
      description: ""
      operationId: "clear"
      produces:
      - "application/json"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Messages deleted"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
  /queues/{queue}/count:
    get:
      tags:
      - "Queue"
      summary: "Returns number of entries on a queue"
      description: ""
      operationId: "count"
      produces:
      - "text/plain"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Queues found"
          schema:
            type: "integer"
            format: "int32"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
  /queues/{queue}/messages:
    get:
      tags:
      - "Queue"
      summary: "Returns all messages for a given queue"
      description: ""
      operationId: "getMessages"
      produces:
      - "application/json"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Messages found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Message"
        204:
          description: "No messages found"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
    post:
      tags:
      - "Queue"
      summary: "Submit a message to a queue"
      description: ""
      operationId: "sendMessage"
      consumes:
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "This parameter encapsulates the payload"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        201:
          description: "The message is submitted"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
  /queues/{queue}/messages/{messageID}:
    get:
      tags:
      - "Queue"
      summary: "Returns the payload for a given queue-entry"
      description: ""
      operationId: "getMessage"
      produces:
      - "application/json"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      - name: "messageID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Payload found"
          schema:
            $ref: "#/definitions/Payload"
        204:
          description: "No payload found"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
    delete:
      tags:
      - "Queue"
      summary: "Deletes a message from a given queue"
      description: ""
      operationId: "deletMessage"
      produces:
      - "application/json"
      parameters:
      - name: "queue"
        in: "path"
        required: true
        type: "string"
      - name: "messageID"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "The message has been deleted"
        404:
          description: "Queue unknown"
        500:
          description: "Server error"
definitions:
  Message:
    type: "object"
    properties:
      messageID:
        type: "string"
        description: "Identifier"
      correlationID:
        type: "string"
        description: "Reference to messageID"
      timestamp:
        type: "string"
        format: "date-time"
        description: "Creation date/time"
      expiration:
        type: "string"
        format: "date-time"
        description: "Expiration date/time"
    description: "Message on a queue"
  Payload:
    type: "object"
    properties:
      payload:
        type: "string"
        description: "The payload itself"
    description: "The payload of an entry"
  Queue:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the queue"
    description: "JMS Queue"
